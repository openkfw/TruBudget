{{- if or (eq .Values.global.env.STORAGE_TYPE "AZURE_DISK") (eq .Values.global.env.STORAGE_TYPE "AZURE_FILE") }}
apiVersion: apps/v1beta1
kind: StatefulSet
{{- else }}
apiVersion: apps/v1
kind: Deployment
{{- end }}
metadata:
  name: {{ .Values.bc.name }}
  labels:
    app: {{ .Values.bc.name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: blockchain
    app.kubernetes.io/instance: {{ .Values.global.branch }}
    app.kubernetes.io/build: {{ .Values.global.build }}
    app.kubernetes.io/component: multichain
    app.kubernetes.io/managed-by: helm
spec:
  serviceName: {{ .Chart.Name }}
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ template "blockchain.name" . }}
      release: {{ .Release.Name }}
      service: {{ .Chart.Name }}
  template:
    updateStrategy:
      type: RollingUpdate
    metadata:
      labels:
        app: {{ template "blockchain.name" . }}
        release: {{ .Release.Name }}
        service: {{ .Chart.Name }}
        app.kubernetes.io/name: blockchain
        app.kubernetes.io/instance: {{ .Values.global.branch }}
        app.kubernetes.io/build: {{ .Values.global.build }}
        app.kubernetes.io/component: multichain
        app.kubernetes.io/managed-by: helm
    spec:
      {{- if eq .Values.global.env.PROVISIONING_TYPE "TEST"}}
      serviceAccountName: default
      {{- else}}
      serviceAccountName: blockchain-sa
      {{- end}}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.global.registry }}{{ .Values.image.repository }}:{{ .Values.global.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        {{- range $key, $value := .Values.bc.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- if and (.Values.global.env.EXPOSE_MC) (.Values.bc.isAlpha) }}
        - name: EXPOSE_MC
          value: "true"
        {{- end }}
        - name: KUBE_SERVICE_NAME
          value: {{ .Values.service.name }}-external
        - name: KUBE_NAMESPACE
          value: {{ .Values.global.namespace }}
        resources:
          requests:
            memory: {{ .Values.bc.resources.memRequest }}
            cpu: {{ .Values.bc.resources.cpuRequest }}
          limits:
            memory: {{ .Values.bc.resources.memLimit }}
            cpu: {{ .Values.bc.resources.cpuLimit }}
        livenessProbe:
          exec:
            command:
            - multichain-cli
            - {{ .Values.bc.env.CHAINNAME }}
            - getinfo
          initialDelaySeconds: {{if eq .Values.global.env.PROVISIONING_TYPE "PROD"}}60{{ else }}30{{ end }}
          periodSeconds: 10
          failureThreshold: 5
          timeoutSeconds: 2
        readinessProbe:
          exec:
            command:
            - multichain-cli
            - {{ .Values.bc.env.CHAINNAME }}
            - getinfo
          initialDelaySeconds: {{if eq .Values.global.env.PROVISIONING_TYPE "PROD"}}60{{ else }}30{{- end }}
          periodSeconds: 10
          failureThreshold: 5
          timeoutSeconds: 2
  {{- if eq .Values.global.env.STORAGE_TYPE "AZURE_DISK"}}
        volumeMounts:
        - mountPath: /root/.multichain
          name: {{  .Values.persistentVolume.name  }}
  volumeClaimTemplates:
  - metadata:
      name: {{  .Values.persistentVolume.name  }}
    spec:
      accessModes:
        - {{ .Values.persistentVolume.volumeAccessMode }}
      resources:
        requests:
          storage: {{ .Values.persistentVolume.storageSize}}
  {{- end }}
  {{- if eq .Values.global.env.STORAGE_TYPE "AZURE_FILE"}}
        volumeMounts:
        - mountPath: /root/.multichain
          name: {{  .Values.persistentVolume.name  }}
      volumes:
        - name: {{  .Values.persistentVolume.name  }}
          persistentVolumeClaim:
            claimName: {{  .Values.persistentVolume.name  }}
  {{- end }}
