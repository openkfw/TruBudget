# This file contains the environmental vars for the operational setup
# Service enabling variables - DO NOT CHANGE (handled by start-trubudget.sh)

REACT_APP_LOGGING=false # DO NOT CHANGE
MULTICHAIN_FEED_ENABLED=true # DO NOT CHANGE
EMAIL_SERVICE_ENABLED=true # DO NOT CHANGE
REACT_APP_EMAIL_SERVICE_ENABLED=true  #  DO NOT CHANGE
DOCUMENT_FEATURE_ENABLED=true # DO NOT CHANGE
REACT_APP_EXPORT_SERVICE_ENABLED=true # DO NOT CHANGE

# Settings variables - Change as you want to

BETA_ENABLED=false # Do you want to enable the beta organization?
EMAIL_ENABLED=true # Do you want to enable the email service?
EXCEL_ENABLED=true # Do you want to enable the excel export service?
STORAGE_ENABLED=true # Do you want to enable the storage service?

# MODULE: Beta organization variables, REQUIRES: BETA_ENABLED=true
BETA_API_PORT=8081
BETA_ORGANIZATION=MyBetaOrganization # This is a comment
BETA_ORGANIZATION_VAULT_SECRET=newSecret
BETA_MULTICHAIN_RPC_PORT=8001
EXTERNAL_IP=""
# END MODULE

# Shared variables
ACCESS_CONTROL_ALLOW_ORIGIN="*"
NODE_ENV=production
ORGANIZATION=KfW

# MODULE: Use of database for email service or storing refresh token
DB_TYPE=pg
DB_NAME=trubudget_email_service
DB_USER=postgres
DB_PASSWORD=test
DB_HOST=emaildb
DB_PORT=5432
DB_SCHEMA=public
DB_SSL=false
POSTGRES_USER=postgres
POSTGRES_HOST=localhost
POSTGRES_PASSWORD=test
POSTGRES_PORT=5432
POSTGRES_DB=trubudget_email_service
SQL_DEBUG=false
# END MODULE

# MODULE: Email servise variables, REQUIRES: EMAIL_ENABLED=true
USER_TABLE=users
SMTP_HOST=host.docker.internal
SMTP_PORT=2500
EMAIL_HOST=email-service
EMAIL_PORT=8890
EMAIL_FROM='"Trubudget Notification Service" <trubudget@notification.com>'
EMAIL_SUBJECT="Trubudget Notificaiton"
EMAIL_TEXT="You have received a notification."
AUTHENTICATION=none
EMAIL_LOG_LEVEL=info
#AUTHENTICATION=JWT
# END MODULE

# MODULE: Storage service variables, REQUIRES: STORAGE_ENABLED=true
STORAGE_SERVICE_HOST=localhost
STORAGE_SERVICE_PORT=8090
STORAGE_SERVICE_EXTERNAL_URL=localhost
STORAGE_LOG_LEVEL=info

## minio
MINIO_ACCESS_KEY=minio
MINIO_SECRET_KEY=minio123
MINIO_PORT=9000
MINIO_HOST=localhost
MINIO_BUCKET_NAME=trubudget
# END MODULE

# MODULE: provisioning
PROVISIONING_LOG_LEVEL=info
PROVISIONING_TYPE=TEST
#other provisioning data
#PROVISIONING_TYPE=PROD
# END MODULE

## blockchain
MULTICHAIN_RPC_PORT=8000
BLOCKCHAIN_PORT=8085
MULTICHAIN_RPC_PASSWORD=s750SiJnj50yIrmwxPnEdSzpfGlTAHzhaUwgqKeb0G1j
API_PORT=8080
API_HOST=localhost
BLOCKCHAIN_LOG_LEVEL=info
# Needs to be enabled when mutual authentication is required between beta and alpha nodes
AUTOSTART=true
# Needs to be enabled when mutual authentication is required between slave and master nodes
#CERT_PATH=""
#CERT_CA_PATH=""
#CERT_KEY_PATH=""

## API
ORGANIZATION_VAULT_SECRET=
MULTICHAIN_RPC_HOST=127.0.0.1
MULTICHAIN_DIR="/root"
ROOT_SECRET=root-secret
#ENCRYPTION_PASSWORD=MyPassword
SIGNING_METHOD=node
API_LOG_LEVEL=info
RATE_LIMIT=
APPLICATIONINSIGHTS_CONNECTION_STRING=
REFRESH_TOKEN_STORAGE=
API_DB_USER=
API_DB_PASSWORD=
API_DB_TYPE=pg
API_DB_HOST=
API_DB_DATABASE=
API_DB_PORT=5432
API_DB_SSL=
API_DB_SCHEMA=public
API_REFRESH_TOKENS_TABLE=refresh_token

## frontend
REACT_APP_VERSION=$npm_package_version
EXPORT_HOST=excel-export-service
EXPORT_PORT=8888
INLINE_RUNTIME_CHUNK=false
REACT_APP_LOG_LEVEL=trace
REACT_APP_LOGGING_SERVICE_HOST=localhost
REACT_APP_LOGGING_SERVICE_PORT=3001
REACT_APP_LOGGING_SERVICE_HOST_SSL=false
REACT_APP_LOGGING_PUSH_INTERVAL=20
REACT_APP_APPLICATIONINSIGHTS_CONNECTION_STRING=
REACT_APP_POLLING_INTERVAL=30000
# could be a multi-line set of configuration for all variables ending "_ADDITIONAL_NGINX_CONF"
REACT_APP_API_SERVICE_ADDITIONAL_NGINX_CONF=""
REACT_APP_EMAIL_SERVICE_ADDITIONAL_NGINX_CONF=""
REACT_APP_EXPORT_SERVICE_ADDITIONAL_NGINX_CONF=""
REACT_APP_STORAGE_SERVICE_ADDITIONAL_NGINX_CONF=""
AUTHPROXY_ENABLED=false

# MODULE: Module excel-export, REQUIRES: EXCEL_ENABLED=true
EXCEL_LOG_LEVEL=info
# END MODULE

##logging
LOGGER_PORT=3001
LOG_LEVEL=trace
LOGGING_SERVICE_CACHE_DURATION=20
LOGGING_SERVICE_NODE_ENV=development

## Used by most services to define log output
PRETTY_PRINT=true

## Docker-Compose Variables
## TAG=latest: Only releases
## TAG=main: Current main (may have unfixed bugs)
## TAG=v1.0.0: Specific release version
TAG=latest # Choose between latest, main, or a specific version, e.g., v2.10.0
