# add https redirect
server {
    listen         80;
    server_name    ${SSL_DOMAIN};
    return         301 https://${SSL_DOMAIN}$request_uri;
}
# ssl
server {
    listen       443 ssl default_server;
    server_name  ${SSL_DOMAIN};
    ssl_certificate     /etc/ssl/${SSL_DOMAIN}/certificate.pem;
    ssl_certificate_key /etc/ssl/${SSL_DOMAIN}/privatekey.pem;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files ${DOLLAR}uri /index.html;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;

    # allow big documents to be hashed
    client_max_body_size 1000M;

    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location ^~ /api/export/xlsx/ {
     # pathToExcelExport
    }

    location ^~ /api/email/ {
     # pathToEmailService
    }

    location ^~ /api/storage/download {
     # pathToStorageService
    }

    location ^~ /api/ {
      # pathToApi
    }


    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
